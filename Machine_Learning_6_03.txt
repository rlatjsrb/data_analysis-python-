머신러닝
- 명시적인 프로그래밍 없이 데이터를 이용해서 예측 또는 분류를 수행하는 알고리즘을 구현하는 기법
- 데이터 -> 머신러닝 모델 -> 예측 또는 분류

머신러닝이 필요한 이유
- 머신로닝 방법론을 이용할 경우, 인간이 정확히 로직을 지정해주기 어려운 문제를 데이터에 기반한 학습을 통해 해결
- 머신러닝 알고리즘을 사용할 때 가장 중요한 부분은 머신러닝 모델이 잘 학습할 수 있도록 적절한 특징을 설정

예측 모델의 필요성
- 데이터 분석을 통한 정교한 예측 모델을 갖고 있을 경우, 중요한 비지니스적 의사결정을 안정적이고 계획적으로 수행

지도 학습(Supervised Learning)
- 머신러닝 모델은 일반적으로 지도 학습 방법론을 사용
- training 데이터의 구성이(input 데이터, 데이터에 대한 정답) 쌍으로 구성되어 있어야만 함
- 지도학습은 정답을 보여주면서 학습시키는 머신러닝 방법론
- input 데이터 -> x, 데이터에 대한 정답 -> y
- 데이터는 (x, y) 쌍으로 구성

Training Data, Test Data
- 학습용 데이터로 머신러닝 모델을 학습시킴
- 학습된 머신러닝 모델의 성능을 트레이닝 데이터에 포함되어 있지 않고, 따로 빼놓은 테스트 데이터로 측정
- 일반적으로 데이터의 80% 정도는 training data, 20% 정도는 test data로 나눠서 사용

Validation Data(검증용 데이터)
- 더 나아가 전체 데이터를 training, validation, test로 나누기도 함
- 검증용 데이터는 트레이닝 과정에서 학습에 사용하지는 않지만 중간중간 테스트 하는데 사용
- 학습하고 있는 모델이 오버피팅에 빠지지 않았는지 체크하는데 사용
- 검증용 데이터는 트레이닝 과정 중간에 사용하는 테스틑 데이터

Overfitting(과대적합), Underfitting(과소적합)
- 처음에는 트레이닝 에러와 검증 에러가 모두 작아지지만 일정 횟수 이상 반복할 경우 트레이닝 에러는 작아지지만 검증 에러는 커지는 오버피팅에 빠짐
- 따라서 트레이닝 에러는 작아지지만 검증 에러는 지점에서 업데이트를 중지하면 최적의 파라미터를 얻음
- 오버피팅은 학습 과정에서 머신러닝 알고리즘의 파라미터가 트레이닝 데이터에 과도하게 최적화되어 트레이닝 데이터에 대해서는 잘 동작하지만 새로운 테스트 데이터에 대해서는 잘 동작하지 못하는 현상
- 오버피팅은 모델의 표현력이 지나치게 강력할 경우 발생하기 쉬움
- 언더피팅은 오버피팅의 반대 상황으로 모델의 표현력이 부족해서 트레이닝 데이터도 제대로 예측하지 못하는 상황
- 오버피팅을 방지하기 위한 기법들을 Regularization 기법이라 부름